*KoombeaConf-2016-final.txt* C√≥mo ser m√°s productivo como desarrollador

 __      ___               ____            _
 \ \    / (_)             |  _ \          | |
  \ \  / / _ _ __ ___     | |_) | __ _ ___| |__
   \ \/ / | | '_ ` _ \    |  _ < / _` / __| '_ \
    \  /  | | | | | | |_  | |_) | (_| \__ \ | | |
     \/   \_|_/ |_/ |_( ) |____/ \__,_|___/_/ \_|
                      |/
                     _    _____ _____ _    _   ZSH too (mostly)!!
                    | |  / ____/ ____| |  | |
      __ _ _ __   __| | | (___| (___ | \__| |
     / _` | '_ \ / _` |  \___ \\___ \|  __  |
    | (_| | | | | (_| |  ____) |___) | |  | |
     \__,_\_| /_|\__,_/ /_____/_____//_|  /_|


C√≥mo ser m√°s productivo como desarrollador, usando herramientas de la l√≠nea de
comandos que funcionan correctamente sin importar cu√°l es tu ambiente de
trabajo (local o remoto).


===============================================================================
TABLA DE CONTENIDOS                                                     *Index*

    1. Buscar Archivos .................................. |find|
    2. Buscar Texto Dentro De Archivos .................. |grep|
    3. Modificar Texto .................................. |sed|
    4. Trabajo Remoto ................................... |ssh|
    5. Personalizacion .................................. |nixfiles|
    6. Conclusion ....................................... |questions|



We keep moving forward, opening new doors, and doing new things, because we're
curious and curiosity keeps leading us down new paths.
                                                             Walt Disney~

===============================================================================
Parte 1: Buscar Archivos                                                 *find*

<find>            Buscar archivos en el arbol de directorios dado un nombre de
                  archivo.

{{{                                                                 *vim-tip-1*
:r  !<comando>    Interactuar con la consola e insertar la salida del comando
                  en el buffer actual.

:r archivo        Insertar el contenido del archivo en el buffer actual.
}}}

                  Ejemplo:

                    find ~/ -name 'xr*'
/home/pi/xr-sinatra
/home/pi/idealzco/vendor/bundles/ruby/2.0.0/gems/rdoc-3.12.2/test/xref_data.rb
/home/pi/idealzco/vendor/bundles/ruby/2.0.0/gems/rdoc-3.12.2/test/xref_test_case.rb

{{{                                                                 *vim-tip-2*
<g-f>             Navegar al archivo bajo el cursos (si existe).

<C-o>, <C-i>      Navegar a la posicion anterior/siguiente.

<C-^>, <C-6>      Alt-Tab Hehe...no mentiras. Pero casi.
}}}

===============================================================================
Parte 2: Buscar Texto Dentro De Archivos                                 *grep*

<grep>            Buscar dentro de archivos, lineas conteniendo un patron de
                  texto.

{{{                                                                 *vim-tip-3*
<C-x><C-f>        Autocompletar archivos.
}}}

                  Ejemplo:

                    grep -nr 'kotaku' ~/idealzco/*
/home/pi/idealzco/app/models/deal.rb:87:  # http://kotaku.com/tag/deals/rss
/home/pi/idealzco/app/models/deal.rb:95:    when /kotaku/
/home/pi/idealzco/lib/tasks/items.rake:11:      http://kotaku.com/tag/deals/rss


{{{                                                                 *vim-tip-4*
<gF>              Abrir archivo e ir a la linea especificada.

<C-w><F>          Abrir archivo en una ventana nueva e ir a la linea
                  especificada.
}}}

===============================================================================
Parte 3: Modificar Texto                                                  *sed*

<sed>             Editor de texto de linea de comandos no interactivo. Sirve
                  para editar texto desde la linea de comandos sin ser
                  interactivo. Duh!

{{{                                                                 *vim-tip-5*
<macros>          Usa <q> seguido de una letra para grabar una macro en esa
                  letra.
                  Usa <@> seguido de la letra donde grabaste la macro para
                  ejecutarla.

Ayer:  ggy$''Pa: A,jggjy$''Pa: A,jggjjy$''Pa: A,jggjjjy$''Pa: A,jggjjjjy$''Pa: A,jggjjjjjy$''Pa: A,jggjjjjjjy$''Pa: A,jj

Hoy: Ihost: jIlogname: jImeÄkbÄkbtime: jImethod: jIurl: jIresponse: jIbyteÄkbes: jj
}}}

                  Ejemplo:

                    sed 's/\t/,/g' nasa_19950801.tsv > nasa_19950801.csv

{{{                                                                 *vim-tip-6*
<substitute>      Usa :<rango>s/buscar/sustituir-por/g para buscar y reemplazar

  :%s/[\t]\+/\r/g
}}}


===============================================================================
Parte 4: Trabajo Remoto                                                   *ssh*

<ssh>             Abre una consola segura en un servidor remoto.

  ~/.ssh/config ~
    Host lala
     HostName test.machine.example.net
     User remoteuser
     IdentityFile ~/.ssh/id_for_test.machine
     Port 57

                  Ejemplo:

                    ssh lala # Great Success!


<scp>             Copia seguramente archivos entre servidores.

                  Ejemplo:

                    scp lala://home/.vimrc .
                    scp ~/.vimrc lala://home/

<curl>            Cliente HTTP, sirve para crear y ejecutar peticiones HTTP y
                  HTTPS

  curl -I google.com ~
    HTTP/1.1 302 Found
    Cache-Control: private
    Content-Type: text/html; charset=UTF-8
    Location: http://www.google.com.co/?gfe_rd=cr&ei=hmJCWK6qHc7I8AfB-4zwBw
    Content-Length: 262
    Date: Sat, 03 Dec 2016 06:13:26 GMT

  curl -O https://github.com/jfgomez86.keys ~

  curl -s https://github.com/jfgomez86.keys >> ~/.ssh/authorized_keys ~

{{{                                                                 *vim-tip-7*
<g-f>             Tambien se puede utilizar con archivos remotos.
}}}

<bash>,<zsh>      Aprendete las hotkeys!

===============================================================================
Parte 5: Personalizacion                                             *nixfiles*

<bash-functions>

  PROJECTS_DIR=/home/pi

  p() {
    PROJECT_NAME="$1";
    cd "$PROJECTS_DIR/$PROJECT_NAME";
  }

  _p_complete() {
    local cur opts
    cur="${COMP_WORDS[COMP_CWORD]}"
    opts="$(ls $PROJECTS_DIR)"

    COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
    return 0
  }
  complete -F _p_complete p

<vimfiles>

  Pathogen ~
    This is a very nice plugin manager for Vim.

  Maintain your own vimfiles ~
    https://github.com/jfgomez86/vimfiles-light   Shameless self-promotion

{{{                                                                 *vim-tip-8*
:'<,'>w           Guarda la seleccion visual en un archivo.
:sh               Abre una consola desde vim.
}}}


===============================================================================
Parte 6: Conclusion                                                 *questions*

{
    "items": [
        {
            "address": "someemail1@yahoo.com",
            "code": "554",
            "created_at": "Thu, 07 May 2015 23:07:47 UTC",
            "error": "554 delivery error: dd This user doesn't have a yahoo.com account (someemail1@yahoo.com) [0] - mta1481.mail.ne1.yahoo.com"
        },
        {
            "address": "someemail2@gmail.com",
            "code": "550",
            "created_at": "Sun, 03 May 2015 13:22:49 UTC",
            "error": "550 5.1.1 The email account that you tried to reach does not exist. Please try\n5.1.1 double-checking the recipient's email address for typos or\n5.1.1 unnecessary spaces. Learn more at\n5.1.1 http://support.google.com/mail/bin/answer.py?answer=6596 xv3si12818843vdb.43 - gsmtp"
        },
        {
            "address": "someemail3@domain.com",
            "code": "550",
            "created_at": "Thu, 02 Jul 2015 17:01:31 UTC",
            "error": "550 No Such User Here"
        },
        {
            "address": "someemail4@domain.com",
            "code": "550",
            "created_at": "Thu, 21 May 2015 03:30:38 UTC",
            "error": "550 Administrative prohibition"
        }
    ],
    "paging": {
        "first": "https://api.mailgun.net/v3/mg.yourdomain.com/bounces?limit=100",
        "last": "https://api.mailgun.net/v3/mg.yourdomain.com/bounces?page=last&limit=100",
        "next": "https://api.mailgun.net/v3/mg.yourdomain.com/bounces?page=next&address=someemail4%40domain.com&limit=100",
        "previous": "https://api.mailgun.net/v3/mg.yourdomain.com/bounces?page=previous&address=someemail1%40yahoo.com&limit=100"
    }
}

{{{                                                                 *vim-tip-9*
:.!comando        Filtrar la linea actual.
                  Ejemplo:
                    :.!python -m json.tool
}}}


Easter Eggs: ~

  :set rightleft
  :help uganda
  :help!
  :help 42
  :help quotes
  :help holy-grail


Nice Tips: ~
  http://stackoverflow.com/questions/726894/what-are-the-dark-corners-of-vim-your-mom-never-told-you-about

Awesome screencasts: ~
  https://www.destroyallsoftware.com/screencasts

Twitter: ~
  https://twitter.com/vimtips?lang=en

Questions? ~

                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .
                        .




   .‚ñÑ‚ñÑ.‚Ä¢.‚ñÑ‚ñÑ‚ñÑ...‚ñÑ‚ñÑ‚ñÑ¬∑..‚ñÑ‚ñÑ¬∑.‚ñ™...‚ñÑ‚ñÑ‚ñÑ¬∑..‚ñÑ‚ñÑ.¬∑.
   ‚ñê‚ñà.‚ñÄ.‚ñ™‚ñÄ‚ñÑ.‚ñà¬∑‚ñê‚ñà.‚ñÄ‚ñà.‚ñê‚ñà.‚ñå‚ñ™‚ñà‚ñà.‚ñê‚ñà.‚ñÄ‚ñà.‚ñê‚ñà.‚ñÄ..
   ‚ñÑ‚ñà.‚ñÄ‚ñà‚ñÑ‚ñê‚ñÄ‚ñÄ‚ñÑ.‚ñÑ‚ñà‚ñÄ‚ñÄ‚ñà.‚ñà‚ñà.‚ñÑ‚ñÑ‚ñê‚ñà¬∑‚ñÑ‚ñà‚ñÄ‚ñÄ‚ñà.‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñÑ
   ‚ñê‚ñà‚ñÑ‚ñ™‚ñê‚ñà‚ñê‚ñà‚Ä¢‚ñà‚ñå‚ñê‚ñà.‚ñ™‚ñê‚ñå‚ñê‚ñà‚ñà‚ñà‚ñå‚ñê‚ñà‚ñå‚ñê‚ñà.‚ñ™‚ñê‚ñå‚ñê‚ñà‚ñÑ‚ñ™‚ñê‚ñà
   ¬∑‚ñÄ‚ñÄ‚ñÄ‚ñÄ..‚ñÄ..‚ñÄ.‚ñÄ..‚ñÄ.¬∑‚ñÄ‚ñÄ‚ñÄ.‚ñÄ‚ñÄ‚ñÄ.‚ñÄ..‚ñÄ..‚ñÄ‚ñÄ‚ñÄ‚ñÄ.

                      https://github.com/jfgomez86/Vim-Bash-Tips

// vim: ft=help foldmethod=marker modifiable noreadonly
